#include <iostream>
#include <algorithm> 


void circularShiftDownRecursive(int matrix[][4], int numRows, int numCols, int shifts, int col = 0) 
{
   
    if (col == numCols) 
    {
        return;
    }

    
    shifts = shifts % numRows; 

    if (shifts > 0) 
    {
        
        int temp[3]; 

        
        for (int i = 0; i < shifts; ++i) 
        {
            temp[i] = matrix[numRows - shifts + i][col];
        }

        
        for (int i = numRows - 1; i >= shifts; --i) 
        {
            matrix[i][col] = matrix[i - shifts][col];
        }

        
        for (int i = 0; i < shifts; ++i) 
        {
            matrix[i][col] = temp[i];
        }
    }

    
    circularShiftDownRecursive(matrix, numRows, numCols, shifts, col + 1);
}


int main() 
{
    
    int matrix[3][4] = 
    {
        {4, 5, 6, 7},
        {1, 2, 4, 1},
        {4, 5, 6, 9}
    };
    int numRows = 3;
    int numCols = 4;
    int shifts = 1;

    std::cout << "Исходный массив:\n";
    for (int i = 0; i < numRows; ++i) 
    {
        for (int j = 0; j < numCols; ++j) 
        {
            std::cout << matrix[i][j] << " ";
        }
        std::cout << std::endl;
    }

    circularShiftDownRecursive(matrix, numRows, numCols, shifts);

    std::cout << "\nМассив после сдвига на " << shifts << " вниз:\n";
    for (int i = 0; i < numRows; ++i) 
    {
        for (int j = 0; j < numCols; ++j) 
        {
            std::cout << matrix[i][j] << " ";
        }
        std::cout << std::endl;
    }

    return 0;
}
